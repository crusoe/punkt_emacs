\input texinfo  @c -*-texinfo-*-
@c %**start of header
@setfilename t3php-mode.info
@settitle TYPO3-PHP and Emacs
@setchapternewpage off
@afourpaper
@macro typothree {}
TYPO3
@end macro
@macro typothreephp {}
T3PHP
@end macro
@macro ext {extkey}
@emph{\extkey\}
@end macro
@c %**end of header

@copying
This manual introduces a TYPO3-PHP major mode for Emacs, which is
specialized on editing PHP code in the TYPO3 world.

Copyright @copyright{} 2009 Joachim Mathes.

@quotation
This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
@end quotation
@end copying

@titlepage
@title TYPO3-PHP and Emacs
@subtitle Edit TYPO3-PHP files with Emacs
@author Joachim Mathes (@email{joachim_mathes@@web.de})
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents
@ifnotinfo
@unnumbered List of figures
@listoffloats Figure
@page
@end ifnotinfo

@ifnottex
@node Top
@top Emacs in the world of TYPO3

@insertcopying
@end ifnottex

@menu
* Introduction:: @typothree{}-PHP and Emacs
* Installation:: Prepare Emacs
* Using T3PHP mode:: Features, commands and key bindings
* Key Index::
* Variable Index::
* Function Index::
@end menu

@c =====================================================================
@node Introduction, Installation, Top, Top
@comment  node-name,  next,  previous,  up
@chapter Introduction

This manual describes T3PHP mode, which extends Emacs with functionality
for editing @typothree{}-PHP files. Of course, it is also useful for PHP
coding in general.

GNU Emacs is an extensible, customizable text editor and can be obtained
for free from @uref{http://ftp.gnu.org/pub/gnu/emacs/}. @xref{Top,
,Preface, emacs, GNU Emacs manual}. The code is written and tested
on GNU Emacs version 23.1.1.

@c =====================================================================
@node Installation, Using T3PHP mode, Introduction, Top
@comment  node-name,  next,  previous,  up
@chapter Installation

To install @typothreephp{} Mode just drop file @file{t3php-mode.el} into
a directory on your load-path. If you are the administrator of the
system you are working on, a possible directory could be
@file{/usr/share/emacs/site-lisp/skampi-mode}, for example. You might
byte-compile it for better performance. @xref{Byte Compilation, , Byte
Compilation, elisp, Emacs Lisp}.

To set up Emacs to automatically edit files ending in @file{.php} using
@typothreephp{} Mode, add the following lines to your @file{~/.emacs}
file (GNU Emacs) or @file{~/.xemacs/init.el} file (XEmacs):
@lisp
(setq auto-mode-alist (cons '("\\.php$" . t3php-mode) auto-mode-alist))
(autoload 't3php-mode "t3php-mode" "Typo3 PHP input file editing mode."
t)
@end lisp
If you just want to test @typothreephp{} Mode or are not eager to modify
your @file{~/.emacs} file, type @kbd{M-x load-file}, load the
@file{t3php-mode.el} file and finally apply the mode to the current
buffer by typing @kbd{M-x t3php-mode}.

@c =====================================================================
@node Using T3PHP mode, Key Index, Installation, Top
@comment  node-name,  next,  previous,  up
@chapter Using T3PHP mode

@typothree{} Mode supports different display and editing features, which
will be described in the following sections.

@menu
* Customization::
* Syntax highlighting::
* Line indentation::
* Inserting code templates::
* Inserting classes::
* Buffer outline::
@end menu

@c ---------------------------------------------------------------------
@node Customization, Syntax highlighting, , Using T3PHP mode
@comment  node-name,  next,  previous,  up
@section Customization

@typothreephp{} Mode defines a customization group in Emacs, which is a
member of the Emacs standard customization group @code{Languages}, whose
parent Emacs group is @code{Programming}. Use @kbd{M-x customize} to
browse through the full list of customization groups or @kbd{M-x
customize-group} with parameter @samp{t3php} to enter the
@typothreephp{} Mode customization group directly

@noindent
The following user-customizable variables are provided.

@anchor{x-t3php-developer}
@deftypevar string t3php-developer
The current developer or author of the PHP code. The value of this
variable is used in the php-doc comments.

Default: @samp{Lisa Fremont <lisa@@fremont.de>}
@end deftypevar

@anchor{x-t3php-typo3-extension-directory}
@deftypevar string t3php-typo3-extension-directory
The path to the TYPO3 extensions' directory relative to the TYPO3 root
directory.

Default: @samp{ext/}
@end deftypevar

@anchor{x-t3php-path-to-typo3-extension-directory}
@deftypevar string t3php-path-to-typo3-extension-directory
The path to the TYPO3 extensions directory relative to the TYPO3 root
directory.

Default: @samp{typo3conf/}
@end deftypevar

@deftypevar string t3php-date-format
The date format which is used for php-doc comments.

Default: @samp{%Y-%m-%d}
@end deftypevar

@anchor{x-t3php-year-format}
@deftypevar string t3php-year-format
The year format which is used in php-doc comments.

Default: @samp{%Y}
@end deftypevar

@deftypevar integer t3php-block-indentation
The indentation relative to a predecessing line which begins a new
code block.

Default: @samp{4}
@end deftypevar

@deftypevar choice t3php-newline-function
This variable decides which function to call upon pressing
@kbd{@key{RET}}. Depending on the chosen option, line indentation will
be processed automatically. The following options are available for
@var{choice}:
@table @code
@item newline
This command just inserts newlines into the current buffer before point.
@item newline-and-indent
This function inserts a newline@footnote{Note the different meanings of
@emph{newline} and @emph{new line}, that goes with their different
spellings. @emph{newline} refers to the code representation of a new
line, while @emph{new line} means its interpretation as a visible new
line in the editor after pressing @kbd{@key{RET}}.}, then indents the
new line (the one following the newline just inserted) according to
@typothreephp{} Mode's internal indentation strategies.
@item reindent-then-newline-and-indent
This command reindents the current line, inserts a newline at point, and
then indents the new line (the one following the newline just inserted).
@end table

Default: @samp{newline}.
@end deftypevar

@deftypevar boolean t3php-php-doc-align
Determines whether the PHPDoc parameters are aligned after a method or
class is inserted with @code{t3php-insert-method} or
@code{t3php-insert-class} respectively. See @ref{Inserting methods} and
@ref{Inserting classes}, for more information.

Aligned parameters:
@smallformat
@verbatim
1  /**
2   * Define foobar
3   *
4   * @param   $foo
5   * @param   $bar
6   * @return
7   * @author  Lisa Fremont <lisa@fremont.de>
8   * @since   2009-12-02
9   */
10 public function foobar($foo, $bar) {
11
12 }
@end verbatim
@end smallformat

Unaligned parameters:
@smallformat
@verbatim
1  /**
2   * Define foobar
3   *
4   * @param $foo
5   * @param $bar
6   * @return
7   * @author Lisa Fremont <lisa@fremont.de>
8   * @since 2009-12-02
9   */
10 public function foobar($foo, $bar) {
11
12 }
@end verbatim
@end smallformat

Default: @samp{t}
@end deftypevar

@deftypevar string t3php-php-manual-url
URL at which to find PHP manual. You can replace @samp{en} with your ISO
language code.

Default: @samp{http://www.php.net/manual/en/}
@end deftypevar

@deftypevar string t3php-php-search-url
URL at which to search for documentation on a word, e.g. a PHP
function.

Default: @samp{http://www.php.net/manual/en/}
@end deftypevar

@deftypevar boolean t3php-outline-keep-other-windows
When the outline is viewed, the boolean value of this variable decides
if the currently selected @typothreephp{} Mode buffer will be
deleted. If the variable is set to true (@samp{t}) the current window is
split and the outline is displayed in the newly created window. When
@code{nil}, all other windows except the selected one will be deleted,
so that the outline window fills an adjustable
(@pxref{x-stswf,,t3php-outline-split-windows-fraction}) amount of the
frame.

Default: @samp{t}.
@end deftypevar

@deftypevar boolean t3php-outline-split-windows-horizontally
This variable determines the splitting mode, if the outline is
displayed. If true, split the current window horizontally. Otherwise
split the window vertically.

Default: @samp{nil}.

I must admit, that sometimes I get confused. So if it is not for your
orientation, at least it is for mine. :-)

@float Figure,fig:split_v
@center @image{images/split_v,,2cm,Splitting a window vertically,}
@caption{Splitting a window @emph{vertically}.}
@shortcaption{Splitting a window vertically.}
@end float

@float Figure,fig:split_h
@center @image{images/split_h,,2cm,Splitting a window horizontally,}
@caption{Splitting a window @emph{horizontally}.}
@shortcaption{Splitting a window horizontally.}
@end float
@end deftypevar

@anchor{x-stswf}
@deftypevar number t3php-outline-split-windows-fraction
This variable describes the fraction of the width or height of the
window, which is used for the outline.

Default: @samp{.3}.
@end deftypevar

@deftypevar boolean t3php-outline-follow-mode
If true, point in outline buffer will make @typothreephp{} window to
follow. It will show the corresponding part of the document. This flag
can be toggled from within the outline buffer with the @kbd{f} key.

Default: @samp{nil}.
@end deftypevar

@deftypevar color t3php-outline-hl-line-color
The color used to highlight the background of the horizontal line which
marks the current line of the outline buffer and the corresponding line
in the @typothreephp{} buffer when follow mode is active.

Default: @samp{DarkSlateBlue}.
@end deftypevar

@deftypevar color t3php-outline-method-name-color
The color used to highlight the lines in the outline, which refer to
the corresponding method.

Default: @samp{sea green}.
@end deftypevar

@c ---------------------------------------------------------------------
@node Syntax highlighting, Line indentation, Customization, Using T3PHP mode
@comment  node-name,  next,  previous,  up
@section Syntax highlighting

Syntax highlighting is a convenient feature of an editor to improve the
appearance hence the readability of code. @typothree{} Mode supports the
highlighting of single line and multiline comments, keywords and several
syntactic structures.

In XEmacs syntax highlighting should be enabled automatically. In GNU
Emacs you may have to add these lines to your @file{~/.emacs} file:
@lisp
(global-font-lock-mode t)
(setq font-lock-maximum-decoration t)
@end lisp

@c ---------------------------------------------------------------------
@node Line indentation, Inserting code templates, Syntax highlighting, Using T3PHP mode
@comment  node-name,  next,  previous,  up
@section Line indentation

A PHP code line is indented automatically when the @key{TAB} key is
pressed while point is on the according line. The indentation takes
place with respect to the indentation of previous
lines. @xref{Customization}, for details. The default width is @code{2}.

Depending on the current value of the customizable variable
@var{t3php-newline-function}, line indentation might be executed
automatically after pressing @kbd{@key{RET}}. @xref{Customization}, for
details.

@c =====================================================================
@node Inserting code templates, , Line indentation, Using T3PHP mode
@comment  node-name,  next,  previous,  up
@section Inserting code templates
The following sections describe functions and their respective key
bindings to insert templates for methods and classes.

@menu
* Inserting methods::
* Inserting classes::
@end menu

@c ---------------------------------------------------------------------
@node Inserting methods, Inserting classes, , Inserting code templates
@comment  node-name,  next,  previous,  up
@subsection Inserting methods

@deffn {Interactive Command} t3php-insert-method
Insert the rudimentary method framework code with respect to TYPO3 coding
standards. The function asks interactively for the method name, an
auto-completed modifier (@code{public}, @code{protected},
@code{private}) and method arguments until an empty string is provided.
The inserted code consists of
@itemize
@item
a class header comment in PHPdoc style which contains
@itemize @minus
@item
empty lines for method descriptions
@item
@code{@@param} and variable name
@item
@code{@@return}
@item
@code{@@author} (default: @samp{t3php-developer})
@item
@code{@@since} (default: @samp{t3php-date-format})
@end itemize
@item
the method signature
@end itemize

Key binding: @kbd{C-c C-if}.
@end deffn
@noindent
The following example was inserted with parameters
@itemize
@item
Method name: @code{foobar}
@item
Modifier: @code{public}
@item
Parameter: @code{foo}
@item
Parameter: @code{bar}
@end itemize
@smallformat
@verbatim
1  /**
2   *
3   *
4   * @param $foo
5   * @param $bar
6   * @return
7   * @author Lisa Fremont <lisa@fremont.de>
8   * @since 2009-12-02
9   */
10 public function foobar($foo, $bar) {
11
12 }
@end verbatim
@end smallformat

@c .....................................................................
@node Inserting classes,  Buffer outline, Inserting methods, Inserting code templates
@comment  node-name,  next,  previous,  up
@subsection Inserting classes

@deffn {Interactive Command} t3php-insert-class
Insert the rudimentary class framework code with respect to TYPO3 coding
standards. The inserted code consists of
@itemize
@item
PHP tags
@item
a copyright notice where date and author are inserted automatically with
respect to customizable variables @samp{t3php-year-format} and
@samp{t3php-developer}. See @ref{x-t3php-year-format,, t3php-year-format} and
@ref{x-t3php-developer,, x-t3php-developer}, for more information.
@item
a marker comment for the class and function index which can be inserted
by TYPO3 extension @ext{extdeval}. The following empty lines might be
filled with required files.
@item
a class header comment in PHPdoc style which contains
@itemize @minus
@item
@code{@@author} (default: @samp{t3php-developer})
@item
@code{@@package} (default: @samp{TYPO3})
@item
@code{@@subpackage} (default: empty)
@item
@code{@@since} (default: @samp{t3php-date-format})
@end itemize
@item
the class definition
@item
a TYPO3 XCLASS inclusion code snippet for class extension and/or
overriding. The associative array @code{TYPO3_CONF_VARS} has a key which
refers to the current class path and file name, which is inserted
dynamically. The information is extracted from the customizable
variables @samp{t3php-path-to-typo3-extension-directory} and the buffer
file name. See @ref{x-t3php-typo3-extension-directory,,
t3php-typo3-extension-directory}, for more information.
@end itemize

Key binding: @kbd{C-c C-ic}.
@end deffn
@noindent
The following code example was inserted in an empty file named
@file{class.bar.php}:
@smallformat
@verbatim
1  <?php
2  /***************************************************************
3   *  Copyright notice
4   *
5   *  (c) 2009 Lisa Fremont <lisa@fremont.de>
6   *  All rights reserved
7   *
8   *  This script is part of the TYPO3 project. The TYPO3 project is
9   *  free software; you can redistribute it and/or modify
10  *  it under the terms of the GNU General Public License as published by
11  *  the Free Software Foundation; either version 2 of the License, or
12  *  (at your option) any later version.
13  *
14  *  The GNU General Public License can be found at
15  *  http://www.gnu.org/copyleft/gpl.html.
16  *
17  *  This script is distributed in the hope that it will be useful,
18  *  but WITHOUT ANY WARRANTY; without even the implied warranty of
19  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
20  *  GNU General Public License for more details.
21  *
22  *  This copyright notice MUST APPEAR in all copies of the script!
23  ***************************************************************/
24 /**
25  * [CLASS/FUNCTION INDEX of SCRIPT]
26  *
27  * Hint: use extdeveval to insert/update function index above.
28  */
29
30
31
32
33
34 /**
35  *
36  *
37  * @author     Lisa Fremont <lisa@fremont.de>
38  * @package    TYPO3
39  * @subpackage
40  * @since      2009-12-02
41  */
42 class tslib_content {
43
44 }
45
46
47 /*******************************************************************************
48  * TYPO3 XCLASS INCLUSION (for class extension/overriding)
49  ******************************************************************************/
50 if (defined('TYPO3_MODE') && $TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/foo/class.bar.php']) {
51     include_once($TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/foo/class.bar.php']);
52 }
53 ?>
@end verbatim
@end smallformat

@c ---------------------------------------------------------------------
@node Buffer outline, , Inserting classes, Using T3PHP mode
@comment  node-name,  next,  previous,  up
@section Buffer outline

@kindex @kbd{C-c C-t}
@kindex @kbd{n}
@kindex @kbd{@key{RIGHT}}
@kindex @kbd{@key{DOWN}}
@kindex @kbd{p}
@kindex @kbd{@key{LEFT}}
@kindex @kbd{@key{UP}}
@kindex @kbd{C-@key{HOME}}
@kindex @kbd{C-@key{END}}
@kindex @kbd{@key{SPC}}
@kindex @kbd{@key{TAB}}
@kindex @kbd{@key{RET}}
@kindex @kbd{f}
@kindex @kbd{r}
@kindex @kbd{k}
@kindex @kbd{?}

The outline buffer summarizes the methods of the PHP buffer and provides
comfortable navigation through the PHP buffer. The first three lines are
intangible and show the file name of the current PHP input file and the
shortcuts of the most important commands.

Each method in the current PHP buffer is referred to by its name. The
maximally displayed line width of a method name is limited to 40
characters. Thus, a longer name is chopped to a length of 40 characters
and ellipse characters (@code{...}) are concatenated. When you move the
mouse cursor over a method name the complete name is displayed
nevertheless. On graphical displays, it is displayed as a @emph{tooltip}
or @emph{balloon help} as it is called sometimes. On some systems, it is
shown in the echo area. On text-only terminals, Emacs can't follow the
mouse, and therefore is not able to show the complete name on
mouse-over.

The character and color of the leftmost column indicates the type of
method modifier:
@table @code
@item private
@code{[-]} (color: @samp{firebrick})
@item protected
@code{[#]} (color: @samp{goldenrod})
@item public
@code{[+]} (color: @samp{forest green})
@end table


The rightmost column presents the line numbers, which delimit the region
of the respective measurement block.
@smallformat
@verbatim
TABLE OF CONTENTS of ~/public_html/typo3/t3lib/class.t3lib_extmgm.php
SPC=view TAB=goto RET=goto+kill [f]ollow [r]escan  [k]ill [?]Help
-----------------------------------------------------------------------
[P] isLoaded                                      [  131-136  ]
[P] extPath                                       [  147-155  ]
[P] extRelPath                                    [  165-172  ]
[P] siteRelPath                                   [  182-185  ]
[P] getCN                                         [  194-197  ]
[P] addTCAcolumns                                 [  227-235  ]
[P] addToAllTCAtypes                              [  251-304  ]
[P] allowTableOnStandardPages                     [  315-320  ]
[P] addModule                                     [  332-378  ]
[P] addModulePath                                 [  390-395  ]
[P] insertModuleFunction                          [  412-421  ]
[P] addPageTSConfig                               [  431-435  ]
[P] addUserTSConfig                               [  445-449  ]
[P] addLLrefForTCAdescr                           [  460-472  ]
@end verbatim
@end smallformat

@deffn {Interactive Command} t3php-outline rescan
This command shows the outline of the current PHP buffer. If
@var{rescan} is true, the PHP buffer will be rescanned before the ouline
buffer is displayed.

Key binding @kbd{C-ct}.
@end deffn

@noindent
The outline buffer is a read-only buffer with few dedicated key bindings:
@table @kbd
@item n
Move to the next selectable item.

@item @key{RIGHT}
Move to the next selectable item.

@item @key{DOWN}
Move to the next selectable item.

@item p
Move to the previous selectable item.

@item @key{LEFT}
Move to the previous selectable item.

@item @key{UP}
Move to the previous selectable item.

@item C-@key{HOME}
Move to the beginning of the outline buffer.

@item C-@key{END}
Move to the end of the outline buffer.

@item @key{SPC}
Show the corresponding location of the @typothree{} buffer.

@item @key{TAB}
Go to the corresponding location of the @typothree{} buffer and keep the
outline window.

@item @key{RET}
Go to the corresponding location of the @typothree{} buffer and hide the
outline window.

@item f
Toggle follow mode.

@item r
Re-parse the @typothree{} buffer.

@item k
Kill the outline buffer.

@item ?
Show a help buffer.
@end table

@page

@c =====================================================================
@node Key Index, Variable Index, Using T3PHP mode, Top
@comment  node-name,  next,  previous,  up
@unnumbered Key Index

@printindex ky

@c =====================================================================
@node Variable Index, Function Index, Key Index, Top
@comment  node-name,  next,  previous,  up
@unnumbered Variable Index

@printindex vr

@c =====================================================================
@node Function Index,  , Variable Index, Top
@comment  node-name,  next,  previous,  up
@unnumbered Function Index

@printindex fn

@bye
