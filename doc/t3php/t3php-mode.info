This is t3php-mode.info, produced by makeinfo version 4.13 from
t3php-mode.texi.

This manual introduces a TYPO3-PHP major mode for Emacs, which is
specialized on editing PHP code in the TYPO3 world.

   Copyright (C) 2009 Joachim Mathes.

     This program is free software; you can redistribute it and/or
     modify it under the terms of the GNU General Public License as
     published by the Free Software Foundation; either version 2 of the
     License, or (at your option) any later version.

     This program is distributed in the hope that it will be useful, but
     WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
     02110-1301, USA.


File: t3php-mode.info,  Node: Top,  Next: Introduction,  Up: (dir)

TYPO3-PHP Mode
**************

This manual introduces a TYPO3-PHP major mode for Emacs, which is
specialized on editing PHP code in the TYPO3 world.

   Copyright (C) 2009 Joachim Mathes.

     This program is free software; you can redistribute it and/or
     modify it under the terms of the GNU General Public License as
     published by the Free Software Foundation; either version 2 of the
     License, or (at your option) any later version.

     This program is distributed in the hope that it will be useful, but
     WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
     02110-1301, USA.

* Menu:

* Introduction:: TYPO3-PHP and Emacs
* Installation:: Prepare Emacs
* Using T3PHP mode:: Features, commands and key bindings
* Key Index::
* Variable Index::
* Function Index::


File: t3php-mode.info,  Node: Introduction,  Next: Installation,  Prev: Top,  Up: Top

1 Introduction
**************

This manual describes T3PHP mode, which extends Emacs with functionality
for editing TYPO3-PHP files. Of course, it is also useful for PHP
coding in general.

   GNU Emacs is an extensible, customizable text editor and can be
obtained for free from `http://ftp.gnu.org/pub/gnu/emacs/'. *Note
Preface: (emacs)Top. The code is written and tested on GNU Emacs
version 23.1.1.


File: t3php-mode.info,  Node: Installation,  Next: Using T3PHP mode,  Prev: Introduction,  Up: Top

2 Installation
**************

To install T3PHP Mode just drop file `t3php-mode.el' into a directory
on your load-path. If you are the administrator of the system you are
working on, a possible directory could be
`/usr/share/emacs/site-lisp/skampi-mode', for example. You might
byte-compile it for better performance. *Note Byte Compilation:
(elisp)Byte Compilation.

   To set up Emacs to automatically edit files ending in `.php' using
T3PHP Mode, add the following lines to your `~/.emacs' file (GNU Emacs)
or `~/.xemacs/init.el' file (XEmacs):
     (setq auto-mode-alist (cons '("\\.php$" . t3php-mode) auto-mode-alist))
     (autoload 't3php-mode "t3php-mode" "TYPO3-PHP input file editing mode." t)
   If you just want to test T3PHP Mode or are not eager to modify your
`~/.emacs' file, type `M-x load-file', load the `t3php-mode.el' file
and finally apply the mode to the current buffer by typing `M-x
t3php-mode'.


File: t3php-mode.info,  Node: Using T3PHP mode,  Next: Key Index,  Prev: Installation,  Up: Top

3 Using T3PHP mode
******************

TYPO3 Mode supports different display and editing features, which will
be described in the following sections.

* Menu:

* Customization::
* Syntax highlighting::
* Line indentation::
* Inserting code templates::
* Inserting classes::
* Buffer outline::


File: t3php-mode.info,  Node: Customization,  Next: Syntax highlighting,  Up: Using T3PHP mode

3.1 Customization
=================

T3PHP Mode defines a customization group in Emacs, which is a member of
the Emacs standard customization group `Languages', whose parent Emacs
group is `Programming'. Use `M-x customize' to browse through the full
list of customization groups or `M-x customize-group' with parameter
`t3php' to enter the T3PHP Mode customization group directly

The following user-customizable variables are provided.

 -- Variable: string t3php-developer
     The current developer or author of the PHP code. The value of this
     variable is used in the php-doc comments.

     Default: `Lisa Fremont <lisa@fremont.de>'

 -- Variable: string t3php-typo3-extension-directory
     The path to the TYPO3 extensions' directory relative to the TYPO3
     root directory.

     Default: `ext/'

 -- Variable: string t3php-path-to-typo3-extension-directory
     The path to the TYPO3 extensions directory relative to the TYPO3
     root directory.

     Default: `typo3conf/'

 -- Variable: string t3php-date-format
     The date format which is used for php-doc comments.

     Default: `%Y-%m-%d'

 -- Variable: string t3php-year-format
     The year format which is used in php-doc comments.

     Default: `%Y'

 -- Variable: integer t3php-block-indentation
     The indentation relative to a predecessing line which begins a new
     code block.

     Default: `4'

 -- Variable: choice t3php-newline-function
     This variable decides which function to call upon pressing
     `<RET>'. Depending on the chosen option, line indentation will be
     processed automatically. The following options are available for
     CHOICE:
    `newline'
          This command just inserts newlines into the current buffer
          before point.

    `newline-and-indent'
          This function inserts a newline(1), then indents the new line
          (the one following the newline just inserted) according to
          T3PHP Mode's internal indentation strategies.

    `reindent-then-newline-and-indent'
          This command reindents the current line, inserts a newline at
          point, and then indents the new line (the one following the
          newline just inserted).

     Default: `newline'.

 -- Variable: boolean t3php-php-doc-align
     Determines whether the PHPDoc parameters are aligned after a
     method or class is inserted with `t3php-insert-method' or
     `t3php-insert-class' respectively. See *note Inserting methods::
     and *note Inserting classes::, for more information.

     Aligned parameters:
     1  /**
     2   * Define foobar
     3   *
     4   * @param   $foo
     5   * @param   $bar
     6   * @return
     7   * @author  Lisa Fremont <lisa@fremont.de>
     8   * @since   2009-12-02
     9   */
     10 public function foobar($foo, $bar) {
     11
     12 }

     Unaligned parameters:
     1  /**
     2   * Define foobar
     3   *
     4   * @param $foo
     5   * @param $bar
     6   * @return
     7   * @author Lisa Fremont <lisa@fremont.de>
     8   * @since 2009-12-02
     9   */
     10 public function foobar($foo, $bar) {
     11
     12 }

     Default: `t'

 -- Variable: string t3php-php-manual-url
     URL at which to find PHP manual. You can replace `en' with your ISO
     language code.

     Default: `http://www.php.net/manual/en/'

 -- Variable: string t3php-php-search-url
     URL at which to search for documentation on a word, e.g. a PHP
     function.

     Default: `http://www.php.net/manual/en/'

 -- Variable: boolean t3php-outline-keep-other-windows
     When the outline is viewed, the boolean value of this variable
     decides if the currently selected T3PHP Mode buffer will be
     deleted. If the variable is set to true (`t') the current window is
     split and the outline is displayed in the newly created window.
     When `nil', all other windows except the selected one will be
     deleted, so that the outline window fills an adjustable (*note
     t3php-outline-split-windows-fraction: x-stswf.) amount of the
     frame.

     Default: `t'.

 -- Variable: boolean t3php-outline-split-windows-horizontally
     This variable determines the splitting mode, if the outline is
     displayed. If true, split the current window horizontally.
     Otherwise split the window vertically.

     Default: `nil'.

     I must admit, that sometimes I get confused. So if it is not for
     your orientation, at least it is for mine. :-)

      [image src="images/split_v.png" alt="Splitting a window vertically" text="+-------+         +-------+
     |       |         |       |
     |       |  split  |       |
     |       |  -----> +-------+
     |       |    v    |       |
     |       |         |       |
     +-------+         +-------+
     " ]
     Figure 3.1: Splitting a window _vertically_.

      [image src="images/split_h.png" alt="Splitting a window horizontally" text="+-------+         +---+---+
     |       |         |   |   |
     |       |  split  |   |   |
     |       |  -----> |   |   |
     |       |    h    |   |   |
     |       |         |   |   |
     +-------+         +---+---+
     " ]
     Figure 3.2: Splitting a window _horizontally_.


 -- Variable: number t3php-outline-split-windows-fraction
     This variable describes the fraction of the width or height of the
     window, which is used for the outline.

     Default: `.3'.

 -- Variable: boolean t3php-outline-follow-mode
     If true, point in outline buffer will make T3PHP window to follow.
     It will show the corresponding part of the document. This flag can
     be toggled from within the outline buffer with the `f' key.

     Default: `nil'.

 -- Variable: color t3php-outline-hl-line-color
     The color used to highlight the background of the horizontal line
     which marks the current line of the outline buffer and the
     corresponding line in the T3PHP buffer when follow mode is active.

     Default: `DarkSlateBlue'.

 -- Variable: color t3php-outline-method-name-color
     The color used to highlight the lines in the outline, which refer
     to the corresponding method.

     Default: `sea green'.

   ---------- Footnotes ----------

   (1) Note the different meanings of _newline_ and _new line_, that
goes with their different spellings. _newline_ refers to the code
representation of a new line, while _new line_ means its interpretation
as a visible new line in the editor after pressing `<RET>'.


File: t3php-mode.info,  Node: Syntax highlighting,  Next: Line indentation,  Prev: Customization,  Up: Using T3PHP mode

3.2 Syntax highlighting
=======================

Syntax highlighting is a convenient feature of an editor to improve the
appearance hence the readability of code. TYPO3 Mode supports the
highlighting of single line and multiline comments, keywords and several
syntactic structures.

   In XEmacs syntax highlighting should be enabled automatically. In GNU
Emacs you may have to add these lines to your `~/.emacs' file:
     (global-font-lock-mode t)
     (setq font-lock-maximum-decoration t)


File: t3php-mode.info,  Node: Line indentation,  Next: Inserting code templates,  Prev: Syntax highlighting,  Up: Using T3PHP mode

3.3 Line indentation
====================

A PHP code line is indented automatically when the <TAB> key is pressed
while point is on the according line. The indentation takes place with
respect to the indentation of previous lines. *Note Customization::,
for details. The default width is `4'.

   Depending on the current value of the customizable variable
T3PHP-NEWLINE-FUNCTION, line indentation might be executed
automatically after pressing `<RET>'. *Note Customization::, for
details.


File: t3php-mode.info,  Node: Inserting code templates,  Prev: Line indentation,  Up: Using T3PHP mode

3.4 Inserting code templates
============================

The following sections describe functions and their respective key
bindings to insert templates for methods and classes.

* Menu:

* Inserting methods::
* Inserting classes::


File: t3php-mode.info,  Node: Inserting methods,  Next: Inserting classes,  Up: Inserting code templates

3.4.1 Inserting methods
-----------------------

 -- Interactive Command: t3php-insert-method
     Insert the rudimentary method framework code with respect to TYPO3
     coding standards. The function asks interactively for the method
     name, an auto-completed modifier (`public', `protected',
     `private') and method arguments until an empty string is provided.
     The inserted code consists of
        * a class header comment in PHPdoc style which contains
             - empty lines for method descriptions

             - `@param' and variable name

             - `@return'

             - `@author' (default: `t3php-developer')

             - `@since' (default: `t3php-date-format')

        * the method signature

     Key binding: `C-c C-if'.
The following example was inserted with parameters
   * Method name: `foobar'

   * Modifier: `public'

   * Parameter: `foo'

   * Parameter: `bar'

1  /**
2   *
3   *
4   * @param $foo
5   * @param $bar
6   * @return
7   * @author Lisa Fremont <lisa@fremont.de>
8   * @since 2009-12-02
9   */
10 public function foobar($foo, $bar) {
11
12 }


File: t3php-mode.info,  Node: Inserting classes,  Next: Buffer outline,  Prev: Inserting methods,  Up: Inserting code templates

3.4.2 Inserting classes
-----------------------

 -- Interactive Command: t3php-insert-class
     Insert the rudimentary class framework code with respect to TYPO3
     coding standards. The inserted code consists of
        * PHP tags

        * a copyright notice where date and author are inserted
          automatically with respect to customizable variables
          `t3php-year-format' and `t3php-developer'. See *note
          t3php-year-format: x-t3php-year-format. and *note
          x-t3php-developer: x-t3php-developer, for more information.

        * a marker comment for the class and function index which can
          be inserted by TYPO3 extension _extdeval_. The following
          empty lines might be filled with required files.

        * a class header comment in PHPdoc style which contains
             - `@author' (default: `t3php-developer')

             - `@package' (default: `TYPO3')

             - `@subpackage' (default: empty)

             - `@since' (default: `t3php-date-format')

        * the class definition

        * a TYPO3 XCLASS inclusion code snippet for class extension
          and/or overriding. The associative array `TYPO3_CONF_VARS'
          has a key which refers to the current class path and file
          name, which is inserted dynamically. The information is
          extracted from the customizable variables
          `t3php-path-to-typo3-extension-directory' and the buffer file
          name. See *note t3php-typo3-extension-directory:
          x-t3php-typo3-extension-directory, for more information.

     Key binding: `C-c C-ic'.
The following code example was inserted in an empty file named
`class.bar.php':
1  <?php
2  /***************************************************************
3   *  Copyright notice
4   *
5   *  (c) 2009 Lisa Fremont <lisa@fremont.de>
6   *  All rights reserved
7   *
8   *  This script is part of the TYPO3 project. The TYPO3 project is
9   *  free software; you can redistribute it and/or modify
10  *  it under the terms of the GNU General Public License as published by
11  *  the Free Software Foundation; either version 2 of the License, or
12  *  (at your option) any later version.
13  *
14  *  The GNU General Public License can be found at
15  *  http://www.gnu.org/copyleft/gpl.html.
16  *
17  *  This script is distributed in the hope that it will be useful,
18  *  but WITHOUT ANY WARRANTY; without even the implied warranty of
19  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
20  *  GNU General Public License for more details.
21  *
22  *  This copyright notice MUST APPEAR in all copies of the script!
23  ***************************************************************/
24 /**
25  * [CLASS/FUNCTION INDEX of SCRIPT]
26  *
27  * Hint: use extdeveval to insert/update function index above.
28  */
29
30
31
32
33
34 /**
35  *
36  *
37  * @author     Lisa Fremont <lisa@fremont.de>
38  * @package    TYPO3
39  * @subpackage
40  * @since      2009-12-02
41  */
42 class tslib_content {
43
44 }
45
46
47 /*******************************************************************************
48  * TYPO3 XCLASS INCLUSION (for class extension/overriding)
49  ******************************************************************************/
50 if (defined('TYPO3_MODE') && $TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/foo/class.bar.php']) {
51     include_once($TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/foo/class.bar.php']);
52 }
53 ?>


File: t3php-mode.info,  Node: Buffer outline,  Prev: Inserting classes,  Up: Using T3PHP mode

3.5 Buffer outline
==================

The outline buffer summarizes the methods of the PHP buffer and provides
comfortable navigation through the PHP buffer. The first three lines are
intangible and show the file name of the current PHP input file and the
shortcuts of the most important commands.

   Each method in the current PHP buffer is referred to by its name. The
maximally displayed line width of a method name is limited to 40
characters. Thus, a longer name is chopped to a length of 40 characters
and ellipse characters (`...') are concatenated. When you move the
mouse cursor over a method name the complete name is displayed
nevertheless. On graphical displays, it is displayed as a _tooltip_ or
_balloon help_ as it is called sometimes. On some systems, it is shown
in the echo area. On text-only terminals, Emacs can't follow the mouse,
and therefore is not able to show the complete name on mouse-over.

   The character and color of the leftmost column indicates the type of
method modifier:
`private'
     `[-]' (color: `firebrick')

`protected'
     `[#]' (color: `goldenrod')

`public'
     `[+]' (color: `forest green')

   The rightmost column presents the line numbers, which delimit the
region of the respective measurement block.
TABLE OF CONTENTS of ~/public_html/typo3/t3lib/class.t3lib_extmgm.php
SPC=view TAB=goto RET=goto+kill [f]ollow [r]escan  [k]ill [?]Help
-----------------------------------------------------------------------
[P] isLoaded                                      [  131-136  ]
[P] extPath                                       [  147-155  ]
[P] extRelPath                                    [  165-172  ]
[P] siteRelPath                                   [  182-185  ]
[P] getCN                                         [  194-197  ]
[P] addTCAcolumns                                 [  227-235  ]
[P] addToAllTCAtypes                              [  251-304  ]
[P] allowTableOnStandardPages                     [  315-320  ]
[P] addModule                                     [  332-378  ]
[P] addModulePath                                 [  390-395  ]
[P] insertModuleFunction                          [  412-421  ]
[P] addPageTSConfig                               [  431-435  ]
[P] addUserTSConfig                               [  445-449  ]
[P] addLLrefForTCAdescr                           [  460-472  ]

 -- Interactive Command: t3php-outline rescan
     This command shows the outline of the current PHP buffer. If
     RESCAN is true, the PHP buffer will be rescanned before the ouline
     buffer is displayed.

     Key binding `C-ct'.

The outline buffer is a read-only buffer with few dedicated key
bindings:
`n'
     Move to the next selectable item.

`<RIGHT>'
     Move to the next selectable item.

`<DOWN>'
     Move to the next selectable item.

`p'
     Move to the previous selectable item.

`<LEFT>'
     Move to the previous selectable item.

`<UP>'
     Move to the previous selectable item.

`C-<HOME>'
     Move to the beginning of the outline buffer.

`C-<END>'
     Move to the end of the outline buffer.

`<SPC>'
     Show the corresponding location of the TYPO3 buffer.

`<TAB>'
     Go to the corresponding location of the TYPO3 buffer and keep the
     outline window.

`<RET>'
     Go to the corresponding location of the TYPO3 buffer and hide the
     outline window.

`f'
     Toggle follow mode.

`r'
     Re-parse the TYPO3 buffer.

`k'
     Kill the outline buffer.

`?'
     Show a help buffer.


File: t3php-mode.info,  Node: Key Index,  Next: Variable Index,  Prev: Using T3PHP mode,  Up: Top

Key Index
*********

 [index ]
* Menu:

* <DOWN>:                                Buffer outline.        (line 6)
* <LEFT>:                                Buffer outline.        (line 6)
* <RET>:                                 Buffer outline.        (line 6)
* <RIGHT>:                               Buffer outline.        (line 6)
* <SPC>:                                 Buffer outline.        (line 6)
* <TAB>:                                 Buffer outline.        (line 6)
* <UP>:                                  Buffer outline.        (line 6)
* ?:                                     Buffer outline.        (line 6)
* C-<END>:                               Buffer outline.        (line 6)
* C-<HOME>:                              Buffer outline.        (line 6)
* C-c C-t:                               Buffer outline.        (line 6)
* f:                                     Buffer outline.        (line 6)
* k:                                     Buffer outline.        (line 6)
* n:                                     Buffer outline.        (line 6)
* p:                                     Buffer outline.        (line 6)
* r:                                     Buffer outline.        (line 6)


File: t3php-mode.info,  Node: Variable Index,  Next: Function Index,  Prev: Key Index,  Up: Top

Variable Index
**************

 [index ]
* Menu:

* t3php-block-indentation:               Customization.       (line  43)
* t3php-date-format:                     Customization.       (line  33)
* t3php-developer:                       Customization.       (line  15)
* t3php-newline-function:                Customization.       (line  49)
* t3php-outline-follow-mode:             Customization.       (line 167)
* t3php-outline-hl-line-color:           Customization.       (line 174)
* t3php-outline-keep-other-windows:      Customization.       (line 118)
* t3php-outline-method-name-color:       Customization.       (line 181)
* t3php-outline-split-windows-fraction:  Customization.       (line 161)
* t3php-outline-split-windows-horizontally: Customization.    (line 130)
* t3php-path-to-typo3-extension-directory: Customization.     (line  27)
* t3php-php-doc-align:                   Customization.       (line  70)
* t3php-php-manual-url:                  Customization.       (line 106)
* t3php-php-search-url:                  Customization.       (line 112)
* t3php-typo3-extension-directory:       Customization.       (line  21)
* t3php-year-format:                     Customization.       (line  38)


File: t3php-mode.info,  Node: Function Index,  Prev: Variable Index,  Up: Top

Function Index
**************

 [index ]
* Menu:

* t3php-insert-class:                    Inserting classes.    (line  7)
* t3php-insert-method:                   Inserting methods.    (line  7)
* t3php-outline:                         Buffer outline.       (line 53)



Tag Table:
Node: Top982
Node: Introduction2170
Node: Installation2664
Node: Using T3PHP mode3689
Node: Customization4082
Ref: x-t3php-developer4619
Ref: x-t3php-typo3-extension-directory4824
Ref: x-t3php-path-to-typo3-extension-directory4992
Ref: x-t3php-year-format5296
Ref: fig:split_v8622
Ref: fig:split_h8990
Ref: x-stswf9363
Ref: Customization-Footnote-110349
Node: Syntax highlighting10617
Node: Line indentation11234
Node: Inserting code templates11860
Node: Inserting methods12201
Node: Inserting classes13416
Node: Buffer outline17012
Node: Key Index20595
Node: Variable Index21907
Node: Function Index23227

End Tag Table
